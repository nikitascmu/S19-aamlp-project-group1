libs = c("tidyr","magrittr","purrr","dplyr","stringr","readr","data.table", "mice",
"randomForest", "ada", "gbm", "caret", "e1071", "ROCR", "ggplot2", "glmnet", "readxl")
loadlibs(libs)
#--- setting global decimal print setting
options(scipen=4)
prog = fread("program_activity.csv") %>% as_tibble()
dem = fread("demographic.csv") %>% as_tibble()
presc = fread("opiate_prescription_fills.csv") %>% as_tibble()
summary(dem %>% mutate_if(is.character, as.factor))
# missing data for RACE and GENDER
# merging native hawaiian/pacific islander + no data = no data and other because the former is too small
# merging transgendered male to female and no data = no data and other because former is too small
# dealing with missingness by allowing it to be its own category - because most likely MNAR
dem$RACE[which(grepl("No Data", dem$RACE))] = "No Data and Other"
dem$RACE[which(grepl("Native Hawaiian", dem$RACE))] = "No Data and Other"
dem$GENDER[which(grepl("No Data", dem$GENDER))] = "No Data and Other"
dem$GENDER[which(grepl("Transgendered", dem$GENDER))] = "No Data and Other"
colnames(dem) = c("PERSON_ID", "race", "gender")
summary(dem %>% mutate_if(is.character, as.factor))
summary(prog)
# No missing values in the program data
# Overdose date and opiate overdose has NAs for individuals who have not overdosed,
# so that is meaningful and not actually missing
prog = prog %>% separate(OVERDOSE_DATE, c("OVERDOSE_YEAR", "OVERDOSE_MONTH"), remove=FALSE, sep=4)
prog$OPIATE_OVERDOSE[which(grepl(0, prog$OPIATE_OVERDOSE))] = "Non-Opiate Overdose"
prog$OPIATE_OVERDOSE[which(grepl(1, prog$OPIATE_OVERDOSE))] = "Opiate Overdose"
prog$OPIATE_OVERDOSE[which(is.na(prog$OPIATE_OVERDOSE))] = "No Overdose"
summary(prog %>% mutate_if(is.character, as.factor))
times_used = prog %>% group_by(PERSON_ID) %>% select(YEAR, MONTH) %>% summarise(times_used = max(sequence(n())))
prog_summary = prog %>% group_by(PERSON_ID) %>% summarise(total_cyfchild = sum(CYFCHILD),
total_cyfparent = sum(CYFPARENT),
total_mh = sum(MH),
total_da = sum(DA),
total_rx = sum(RX),
total_acj = sum(ACJ),
total_cr_cases = sum(MDJS_CR_CASES),
total_cr_drug_cases = sum(MDJS_CR_DRUG_CASES))
outcome_df = prog %>% group_by(PERSON_ID) %>%
summarise(od_date = max(OVERDOSE_DATE), od_year = max(OVERDOSE_YEAR),
od_month = max(OVERDOSE_MONTH), od_type = max(OPIATE_OVERDOSE))
summary(presc)
View(dem)
summary(presc %>% mutate(if_character, as.factor))
summary(presc %>% mutate_if(is.character, as.factor))
#--- Loading helper files
loadlibs = function(libs) {
for(lib in libs) {
class(lib)
if(!do.call(require,as.list(lib))) {install.packages(lib)}
do.call(require,as.list(lib))
}
}
libs = c("tidyr","magrittr","purrr","dplyr","stringr","readr","data.table", "mice",
"randomForest", "ada", "gbm", "caret", "e1071", "ROCR", "ggplot2", "glmnet", "readxl")
loadlibs(libs)
#--- setting global decimal print setting
options(scipen=4)
prog = fread("program_activity.csv") %>% as_tibble()
dem = fread("demographic.csv") %>% as_tibble()
presc = fread("opiate_prescription_fills.csv") %>% as_tibble()
summary(dem %>% mutate_if(is.character, as.factor))
# missing data for RACE and GENDER
# merging native hawaiian/pacific islander + no data = no data and other because the former is too small
# merging transgendered male to female and no data = no data and other because former is too small
# dealing with missingness by allowing it to be its own category - because most likely MNAR
dem$RACE[which(grepl("No Data", dem$RACE))] = "No Data and Other"
dem$RACE[which(grepl("Native Hawaiian", dem$RACE))] = "No Data and Other"
dem$GENDER[which(grepl("No Data", dem$GENDER))] = "No Data and Other"
dem$GENDER[which(grepl("Transgendered", dem$GENDER))] = "No Data and Other"
colnames(dem) = c("PERSON_ID", "race", "gender")
summary(dem %>% mutate_if(is.character, as.factor))
summary(prog)
# No missing values in the program data
# Overdose date and opiate overdose has NAs for individuals who have not overdosed,
# so that is meaningful and not actually missing
prog = prog %>% separate(OVERDOSE_DATE, c("OVERDOSE_YEAR", "OVERDOSE_MONTH"), remove=FALSE, sep=4)
prog$OPIATE_OVERDOSE[which(grepl(0, prog$OPIATE_OVERDOSE))] = "Non-Opiate Overdose"
prog$OPIATE_OVERDOSE[which(grepl(1, prog$OPIATE_OVERDOSE))] = "Opiate Overdose"
prog$OPIATE_OVERDOSE[which(is.na(prog$OPIATE_OVERDOSE))] = "No Overdose"
summary(prog %>% mutate_if(is.character, as.factor))
times_used = prog %>% group_by(PERSON_ID) %>% select(YEAR, MONTH) %>% summarise(times_used = max(sequence(n())))
prog_summary = prog %>% group_by(PERSON_ID) %>% summarise(total_cyfchild = sum(CYFCHILD),
total_cyfparent = sum(CYFPARENT),
total_mh = sum(MH),
total_da = sum(DA),
total_rx = sum(RX),
total_acj = sum(ACJ),
total_cr_cases = sum(MDJS_CR_CASES),
total_cr_drug_cases = sum(MDJS_CR_DRUG_CASES))
outcome_df = prog %>% group_by(PERSON_ID) %>%
summarise(od_date = max(OVERDOSE_DATE), od_year = max(OVERDOSE_YEAR),
od_month = max(OVERDOSE_MONTH), od_type = max(OPIATE_OVERDOSE))
summary(presc %>% mutate_if(is.character, as.factor))
presc %>% group_by(PERSON_ID) %>% summarise(min_age = min(AGE), max_age = max(AGE), mean_age = mean(AGE))
presc %>% filter(AGE < 0)
age = presc %>% group_by(PERSON_ID) %>% summarise(min_age = min(AGE), max_age = max(AGE), mean_age = mean(AGE))
age_df = presc %>% group_by(PERSON_ID) %>% summarise(min_age = min(AGE), max_age = max(AGE), mean_age = mean(AGE))
age_df %>% filter(min_age <= 0)
age_df %>% filter(min_age < 0)
presc %>% filter(age < 0)
presc %>% filter(AGE < 0)
presc %>% filter(AGE < 0 & AGE > 100)
presc %>% filter(AGE < 0 | AGE > 100)
age_df %>% filter(min_age < 0)
presc %>% filter(AGE < 0 | AGE > 100)
age_df = presc %>% group_by(PERSON_ID) %>% summarise(min_age = min(AGE), max_age = max(AGE), mean_age = mean(AGE))
age_df = presc %>% group_by(PERSON_ID) %>% summarise(min_age = min(AGE), max_age = max(AGE), mean_age = mean(AGE))
age_df %>% filter(min_age < 0)
age_df %>% filter(min_age < 0 | max_age > 90)
age_df %>% filter(min_age < 0 | max_age > 99)
if_else(max_age > 99, min_age, NA))
age_df %>% mutate(age = if_else(min_age <0, max_age,
if_else(max_age > 99, min_age, NA)))
age_df %>% mutate(age = if_else(min_age <0, max_age,
if_else(max_age > 99, min_age, "NA")))
age_df %>% mutate(age = if_else(min_age <0, max_age,
if_else(max_age > 99, min_age, 999)))
age_df %>% group_by(PERSON_ID) %>% mutate(age = if_else(min_age <0, max_age, if_else(max_age > 99, min_age, 999)))
age_df = presc %>% group_by(PERSON_ID) %>% summarise(min_age = min(AGE), max_age = max(AGE), mean_age = mean(AGE))
age_df %>% group_by(PERSON_ID) %>% mutate(age = if_else(min_age <0, max_age, if_else(max_age > 99, min_age, 999)))
age_df %>% group_by(PERSON_ID) %>% mutate(age = if_else(min_age <0, max_age, min_age)
age_df %>% group_by(PERSON_ID) %>% mutate(age = if_else(min_age <0, max_age, min_age))
age_df = presc %>% group_by(PERSON_ID) %>% summarise(min_age = min(AGE), max_age = max(AGE), mean_age = mean(AGE))
age_df %>% group_by(PERSON_ID) %>% mutate(age = if_else(min_age <0, max_age, min_age))
summary(age_df)
age_df = age_df %>% group_by(PERSON_ID) %>% mutate(age = if_else(min_age <0, max_age, min_age))
age_df = age_df %>% group_by(PERSON_ID) %>% mutate(age = if_else(min_age <0, max_age, min_age))
summary(age_df)
age_df = presc %>% group_by(PERSON_ID) %>% summarise(min_age = min(AGE), max_age = max(AGE), mean_age = mean(AGE))
age_df = age_df %>% group_by(PERSON_ID) %>% mutate(age = if_else(min_age<0, max_age,
if_else(max_age>99, min_age, min_age)))
summary(age_df)
age_df
summary(age_df)
age_df = age_df %>% group_by(PERSON_ID) %>% mutate(age = if_else(min_age<0, max_age, min_age)
summary(age_df)
age_df = age_df %>% group_by(PERSON_ID) %>% mutate(age = if_else(min_age<0, max_age, min_age))
summary(age_df)
View(age_df)
age_df = age_df %>% group_by(PERSON_ID) %>% mutate(age = if_else(min_age<0, max_age, min_age)) %>%
mutate(age = if_else(age<0, NA, age))
age_df = age_df %>% group_by(PERSON_ID) %>% mutate(age = if_else(min_age<0, max_age, min_age)) %>%
mutate(age = if_else(age<0, 999, age))
summary(age_df)
age_df$age[999]
age_df %>% filter(age=999)
age_df %>% filter(age==999)
age_df$age[which(age==999)]
age_df[which(age==999)]
age_df[which(age==999),]
age_df[which(age_df$age==999),]
age_df[which(age_df$age==999),age]
age_df$age[which(age_df$age==999)]
age_df$age[which(age_df$age==999)] = MA
age_df$age[which(age_df$age==999)] = NA
age_df = age_df %>% group_by(PERSON_ID) %>% mutate(age = if_else(age>99, min_age, age))
summary(age_df)
age_df %>% filter(age>99)
#--- Loading helper files
loadlibs = function(libs) {
for(lib in libs) {
class(lib)
if(!do.call(require,as.list(lib))) {install.packages(lib)}
do.call(require,as.list(lib))
}
}
libs = c("tidyr","magrittr","purrr","dplyr","stringr","readr","data.table", "mice",
"randomForest", "ada", "gbm", "caret", "e1071", "ROCR", "ggplot2", "glmnet", "readxl")
loadlibs(libs)
#--- setting global decimal print setting
options(scipen=4)
prog = fread("program_activity.csv") %>% as_tibble()
dem = fread("demographic.csv") %>% as_tibble()
presc = fread("opiate_prescription_fills.csv") %>% as_tibble()
summary(dem %>% mutate_if(is.character, as.factor))
# missing data for RACE and GENDER
# merging native hawaiian/pacific islander + no data = no data and other because the former is too small
# merging transgendered male to female and no data = no data and other because former is too small
# dealing with missingness by allowing it to be its own category - because most likely MNAR
dem$RACE[which(grepl("No Data", dem$RACE))] = "No Data and Other"
dem$RACE[which(grepl("Native Hawaiian", dem$RACE))] = "No Data and Other"
dem$GENDER[which(grepl("No Data", dem$GENDER))] = "No Data and Other"
dem$GENDER[which(grepl("Transgendered", dem$GENDER))] = "No Data and Other"
colnames(dem) = c("PERSON_ID", "race", "gender")
summary(dem %>% mutate_if(is.character, as.factor))
summary(prog)
# No missing values in the program data
# Overdose date and opiate overdose has NAs for individuals who have not overdosed,
# so that is meaningful and not actually missing
prog = prog %>% separate(OVERDOSE_DATE, c("OVERDOSE_YEAR", "OVERDOSE_MONTH"), remove=FALSE, sep=4)
prog$OPIATE_OVERDOSE[which(grepl(0, prog$OPIATE_OVERDOSE))] = "Non-Opiate Overdose"
prog$OPIATE_OVERDOSE[which(grepl(1, prog$OPIATE_OVERDOSE))] = "Opiate Overdose"
prog$OPIATE_OVERDOSE[which(is.na(prog$OPIATE_OVERDOSE))] = "No Overdose"
summary(prog %>% mutate_if(is.character, as.factor))
times_used = prog %>% group_by(PERSON_ID) %>% select(YEAR, MONTH) %>% summarise(times_used = max(sequence(n())))
prog_summary = prog %>% group_by(PERSON_ID) %>% summarise(total_cyfchild = sum(CYFCHILD),
total_cyfparent = sum(CYFPARENT),
total_mh = sum(MH),
total_da = sum(DA),
total_rx = sum(RX),
total_acj = sum(ACJ),
total_cr_cases = sum(MDJS_CR_CASES),
total_cr_drug_cases = sum(MDJS_CR_DRUG_CASES))
outcome_df = prog %>% group_by(PERSON_ID) %>%
summarise(od_date = max(OVERDOSE_DATE), od_year = max(OVERDOSE_YEAR),
od_month = max(OVERDOSE_MONTH), od_type = max(OPIATE_OVERDOSE))
summary(presc %>% mutate_if(is.character, as.factor))
age_df = presc %>% group_by(PERSON_ID) %>% summarise(min_age = min(AGE), max_age = max(AGE), mean_age = mean(AGE))
age_df = age_df %>% group_by(PERSON_ID) %>% mutate(age = if_else(min_age<0, max_age, min_age)) %>%
mutate(age = if_else(age<0, 999, age))
age_df$age[which(age_df$age>99)] = NA
summary(age_df)
age_df = presc %>% group_by(PERSON_ID) %>% summarise(min_age = min(AGE), max_age = max(AGE), mean_age = mean(AGE))
age_df = age_df %>% group_by(PERSON_ID) %>% mutate(age = if_else(min_age<0, max_age, min_age)) %>%
mutate(age = if_else(age<0, 999, age))
age_df$age[which(age_df$age>99)] = NA
summary(age_df)
presc_raw = presc
presc_raw <- presc_raw %>%
filter(presc_raw$GENERIC_NAME != "OPIUM/BELLADONNA ALKAL") %>% droplevels()
#--- Loading helper files
loadlibs = function(libs) {
for(lib in libs) {
class(lib)
if(!do.call(require,as.list(lib))) {install.packages(lib)}
do.call(require,as.list(lib))
}
}
libs = c("tidyr","magrittr","purrr","dplyr","stringr","readr","data.table", "mice",
"randomForest", "ada", "gbm", "caret", "e1071", "ROCR", "ggplot2", "glmnet", "readxl")
loadlibs(libs)
#--- setting global decimal print setting
options(scipen=4)
prog = fread("program_activity.csv") %>% as_tibble()
dem = fread("demographic.csv") %>% as_tibble()
presc = fread("opiate_prescription_fills.csv") %>% as_tibble()
summary(dem %>% mutate_if(is.character, as.factor))
# missing data for RACE and GENDER
# merging native hawaiian/pacific islander + no data = no data and other because the former is too small
# merging transgendered male to female and no data = no data and other because former is too small
# dealing with missingness by allowing it to be its own category - because most likely MNAR
dem$RACE[which(grepl("No Data", dem$RACE))] = "No Data and Other"
dem$RACE[which(grepl("Native Hawaiian", dem$RACE))] = "No Data and Other"
dem$GENDER[which(grepl("No Data", dem$GENDER))] = "No Data and Other"
dem$GENDER[which(grepl("Transgendered", dem$GENDER))] = "No Data and Other"
colnames(dem) = c("PERSON_ID", "race", "gender")
summary(dem %>% mutate_if(is.character, as.factor))
summary(prog)
# No missing values in the program data
# Overdose date and opiate overdose has NAs for individuals who have not overdosed,
# so that is meaningful and not actually missing
prog = prog %>% separate(OVERDOSE_DATE, c("OVERDOSE_YEAR", "OVERDOSE_MONTH"), remove=FALSE, sep=4)
prog$OPIATE_OVERDOSE[which(grepl(0, prog$OPIATE_OVERDOSE))] = "Non-Opiate Overdose"
prog$OPIATE_OVERDOSE[which(grepl(1, prog$OPIATE_OVERDOSE))] = "Opiate Overdose"
prog$OPIATE_OVERDOSE[which(is.na(prog$OPIATE_OVERDOSE))] = "No Overdose"
summary(prog %>% mutate_if(is.character, as.factor))
times_used = prog %>% group_by(PERSON_ID) %>% select(YEAR, MONTH) %>% summarise(times_used = max(sequence(n())))
prog_summary = prog %>% group_by(PERSON_ID) %>% summarise(total_cyfchild = sum(CYFCHILD),
total_cyfparent = sum(CYFPARENT),
total_mh = sum(MH),
total_da = sum(DA),
total_rx = sum(RX),
total_acj = sum(ACJ),
total_cr_cases = sum(MDJS_CR_CASES),
total_cr_drug_cases = sum(MDJS_CR_DRUG_CASES))
outcome_df = prog %>% group_by(PERSON_ID) %>%
summarise(od_date = max(OVERDOSE_DATE), od_year = max(OVERDOSE_YEAR),
od_month = max(OVERDOSE_MONTH), od_type = max(OPIATE_OVERDOSE))
summary(presc %>% mutate_if(is.character, as.factor))
age_df = presc %>% group_by(PERSON_ID) %>% summarise(min_age = min(AGE), max_age = max(AGE), mean_age = mean(AGE))
age_df = age_df %>% group_by(PERSON_ID) %>% mutate(age = if_else(min_age<0, max_age, min_age)) %>%
mutate(age = if_else(age<0, 999, age))
age_df$age[which(age_df$age>99)] = NA
summary(age_df)
presc_raw = presc
#presc_raw <- presc_raw %>%
# filter(presc_raw$GENERIC_NAME != "OPIUM/BELLADONNA ALKAL") %>% droplevels()
presc_raw <- presc_raw %>%
mutate(GENERIC_NAME = as.factor(gsub("DIHYDROCODEINE BITARTR", "DIHYDROCODEINE BITARTRATE", presc_raw$GENERIC_NAME)))
presc_raw <- presc_raw %>%
mutate(GENERIC_NAME = as.factor(gsub("HYDROCODONE BITARTRAT$", "HYDROCODONE BITARTRATE", presc_raw$GENERIC_NAME)))
presc_raw <- presc_raw %>%
mutate(GENERIC_NAME = as.factor(gsub("MORPHINE SULFATE/NALTR", "MORPHINE SULFATE", presc_raw$GENERIC_NAME)))
presc_raw <- presc_raw %>%
mutate(GENERIC_NAME = as.factor(gsub("OXYCODONE HCL/ACETAMIN", "OXYCODONE HCL", presc_raw$GENERIC_NAME)))
presc_raw <- presc_raw %>%
mutate(GENERIC_NAME = as.factor(gsub("OXYCODONE HCL/ASPIRIN", "OXYCODONE HCL", presc_raw$GENERIC_NAME)))
presc_raw <- presc_raw %>%
mutate(GENERIC_NAME = as.factor(gsub("PENTAZOCINE HCL/ACETAM", "PENTAZOCINE HCL", presc_raw$GENERIC_NAME)))
presc_raw <- presc_raw %>%
mutate(GENERIC_NAME = as.factor(gsub("PENTAZOCINE HCL/NALOXO", "PENTAZOCINE HCL", presc_raw$GENERIC_NAME)))
presc_raw <- presc_raw %>%
mutate(GENERIC_NAME = as.factor(gsub("TRAMADOL HCL/ACETAMINO", "TRAMADOL HCL", presc_raw$GENERIC_NAME)))
summary(presc_raw$GENERIC_NAME)
presc_raw = presc
presc_raw <- presc_raw %>%
mutate(GENERIC_NAME = as.factor(gsub("DIHYDROCODEINE BITARTR", "DIHYDROCODEINE BITARTRATE", presc_raw$GENERIC_NAME)))
presc_raw <- presc_raw %>%
mutate(GENERIC_NAME = as.factor(gsub("HYDROCODONE BITARTRAT$", "HYDROCODONE BITARTRATE", presc_raw$GENERIC_NAME)))
presc_raw <- presc_raw %>%
mutate(GENERIC_NAME = as.factor(gsub("MORPHINE SULFATE$", "MORPHINE SULFATE", presc_raw$GENERIC_NAME)))
presc_raw <- presc_raw %>%
mutate(GENERIC_NAME = as.factor(gsub("OXYCODONE HCL$", "OXYCODONE HCL", presc_raw$GENERIC_NAME)))
#presc_raw <- presc_raw %>%
# mutate(GENERIC_NAME = as.factor(gsub("OXYCODONE HCL/ASPIRIN", "OXYCODONE HCL", presc_raw$GENERIC_NAME)))
presc_raw <- presc_raw %>%
mutate(GENERIC_NAME = as.factor(gsub("PENTAZOCINE HCL$", "PENTAZOCINE HCL", presc_raw$GENERIC_NAME)))
#presc_raw <- presc_raw %>%
# mutate(GENERIC_NAME = as.factor(gsub("PENTAZOCINE HCL/NALOXO", "PENTAZOCINE HCL", presc_raw$GENERIC_NAME)))
presc_raw <- presc_raw %>%
mutate(GENERIC_NAME = as.factor(gsub("TRAMADOL HCL$", "TRAMADOL HCL", presc_raw$GENERIC_NAME)))
presc_raw <- presc_raw %>%
mutate(GENERIC_NAME = as.factor(gsub("CODEINE PHOSPHATE$", "CODEINE PHOSPHATE", presc_raw$GENERIC_NAME)))
presc_raw <- presc_raw %>%
mutate(GENERIC_NAME = as.factor(gsub("OPIUM/BELLADONNA$", "OPIUM/BELLADONNA", presc_raw$GENERIC_NAME)))
summary(presc_raw$GENERIC_NAME)
presc_raw = presc
presc_raw <- presc_raw %>%
mutate(GENERIC_NAME = as.factor(grepl("DIHYDROCODEINE BITARTR", "DIHYDROCODEINE BITARTRATE", presc_raw$GENERIC_NAME)))
presc_raw <- presc_raw %>%
mutate(GENERIC_NAME = as.factor(grepl("HYDROCODONE BITARTRAT$", "HYDROCODONE BITARTRATE", presc_raw$GENERIC_NAME)))
presc_raw <- presc_raw %>%
mutate(GENERIC_NAME = as.factor(grepl("MORPHINE SULFATE$", "MORPHINE SULFATE", presc_raw$GENERIC_NAME)))
presc_raw <- presc_raw %>%
mutate(GENERIC_NAME = as.factor(grepl("OXYCODONE HCL$", "OXYCODONE HCL", presc_raw$GENERIC_NAME)))
#presc_raw <- presc_raw %>%
# mutate(GENERIC_NAME = as.factor(gsub("OXYCODONE HCL/ASPIRIN", "OXYCODONE HCL", presc_raw$GENERIC_NAME)))
presc_raw <- presc_raw %>%
mutate(GENERIC_NAME = as.factor(grepl("PENTAZOCINE HCL$", "PENTAZOCINE HCL", presc_raw$GENERIC_NAME)))
#presc_raw <- presc_raw %>%
# mutate(GENERIC_NAME = as.factor(gsub("PENTAZOCINE HCL/NALOXO", "PENTAZOCINE HCL", presc_raw$GENERIC_NAME)))
presc_raw <- presc_raw %>%
mutate(GENERIC_NAME = as.factor(grepl("TRAMADOL HCL$", "TRAMADOL HCL", presc_raw$GENERIC_NAME)))
presc_raw <- presc_raw %>%
mutate(GENERIC_NAME = as.factor(grepl("CODEINE PHOSPHATE$", "CODEINE PHOSPHATE", presc_raw$GENERIC_NAME)))
presc_raw <- presc_raw %>%
mutate(GENERIC_NAME = as.factor(gsub("OPIUM/BELLADONNA$", "OPIUM/BELLADONNA", presc_raw$GENERIC_NAME)))
summary(presc_raw$GENERIC_NAME)
presc_raw = presc
presc_raw <- presc_raw %>%
mutate(generic_clean =
if_else(grepl('DIHYDROCODEINE BITARTR', presc_raw$GENERIC_NAME), 'DIHYDROCODEINE BITARTRATE',
if_else(grepl('HYDROCODONE BITARTRAT', presc_raw$GENERIC_NAME), 'HYDROCODONE BITARTRATE',
if_else(grepl('MORPHINE SULFATE', presc_raw$GENERIC_NAME), 'MORPHINE SULFATE',
if_else(grepl('OXYCODONE', presc_raw$GENERIC_NAME), 'OXYCODONE',
if_else(grepl('PENTAZOCINE', presc_raw$GENERIC_NAME), 'PENTAZOCINE',
if_else(grepl('TRAMADOL', presc_raw$GENERIC_NAME), 'TRAMADOL',
if_else(grepl('CODEINE PHOSPHATE', presc_raw$GENERIC_NAME), 'CODEINE PHOSPHATE',
if_else(grepl('OPIUM/BELLADONNA', presc_raw$GENERIC_NAME), 'OPIUM/BELLADONNA','NA'
)))))))))
presc_raw %>% select(GENERIC_NAME, generic_clean)
summary(presc_raw$generic_clean)
summary(presc_raw$generic_clean %>% mutate_if(is.character, as.factor))
summary(presc_raw$generic_clean %>% mutate_if(is.character, as.factor))
summary(presc_raw %>% mutate_if(is.character, as.factor))
table(presc_raw$generic_clean)
table(presc_raw$GENERIC_NAME)
presc_raw = presc
presc_raw <- presc_raw %>%
mutate(generic_clean =
if_else(grepl('DIHYDROCODEINE BITARTR', presc_raw$GENERIC_NAME), 'DIHYDROCODEINE BITARTRATE',
if_else(grepl('BUPRENORPHINE', presc_raw$GENERIC_NAME), 'BUPRENORPHINE',
if_else(grepl('HYDROCODONE BITARTRAT', presc_raw$GENERIC_NAME), 'HYDROCODONE BITARTRATE',
if_else(grepl('MORPHINE SULFATE', presc_raw$GENERIC_NAME), 'MORPHINE SULFATE',
if_else(grepl('OXYCODONE', presc_raw$GENERIC_NAME), 'OXYCODONE',
if_else(grepl('PENTAZOCINE', presc_raw$GENERIC_NAME), 'PENTAZOCINE',
if_else(grepl('TRAMADOL', presc_raw$GENERIC_NAME), 'TRAMADOL',
if_else(grepl('CODEINE PHOSPHATE', presc_raw$GENERIC_NAME), 'CODEINE PHOSPHATE',
if_else(grepl('OPIUM/BELLADONNA', presc_raw$GENERIC_NAME), 'OPIUM/BELLADONNA', GENERIC_NAME
))))))))))
#table(presc_raw$GENERIC_NAME)
table(presc_raw$GENERIC_NAME, presc_raw$generic_clean)
presc_raw = presc
presc_raw <- presc_raw %>%
mutate(generic_clean =
if_else(grepl('DIHYDROCODEINE BITARTR', presc_raw$GENERIC_NAME), 'DIHYDROCODEINE BITARTRATE',
if_else(grepl('BUPRENORPHINE', presc_raw$GENERIC_NAME), 'BUPRENORPHINE',
if_else(grepl('HYDROCODONE BITARTRAT', presc_raw$GENERIC_NAME), 'HYDROCODONE BITARTRATE',
if_else(grepl('MORPHINE SULFATE', presc_raw$GENERIC_NAME), 'MORPHINE SULFATE',
if_else(grepl('OXYCODONE', presc_raw$GENERIC_NAME), 'OXYCODONE',
if_else(grepl('PENTAZOCINE', presc_raw$GENERIC_NAME), 'PENTAZOCINE',
if_else(grepl('TRAMADOL', presc_raw$GENERIC_NAME), 'TRAMADOL',
if_else(grepl('CODEINE PHOSPHATE', presc_raw$GENERIC_NAME), 'CODEINE PHOSPHATE',
if_else(grepl('OPIUM/BELLADONNA', presc_raw$GENERIC_NAME), 'OPIUM/BELLADONNA',
if_else(grepl('FENTANYL', presc_raw$GENERIC_NAME), 'FENTANYL',
if_else(grepl('HYDROMORPHONE', presc_raw$GENERIC_NAME), 'HYDROMORPHONE',
if_else(grepl('MEPERIDINE', presc_raw$GENERIC_NAME), 'MEPERIDINE', GENERIC_NAME
)))))))))))))
table(presc_raw$generic_clean)
presc <- presc %>%
mutate(generic_clean =
if_else(grepl('DIHYDROCODEINE BITARTR', presc_raw$GENERIC_NAME), 'DIHYDROCODEINE BITARTRATE',
if_else(grepl('BUPRENORPHINE', presc_raw$GENERIC_NAME), 'BUPRENORPHINE',
if_else(grepl('HYDROCODONE BITARTRAT', presc_raw$GENERIC_NAME), 'HYDROCODONE BITARTRATE',
if_else(grepl('MORPHINE SULFATE', presc_raw$GENERIC_NAME), 'MORPHINE SULFATE',
if_else(grepl('OXYCODONE', presc_raw$GENERIC_NAME), 'OXYCODONE',
if_else(grepl('PENTAZOCINE', presc_raw$GENERIC_NAME), 'PENTAZOCINE',
if_else(grepl('TRAMADOL', presc_raw$GENERIC_NAME), 'TRAMADOL',
if_else(grepl('CODEINE PHOSPHATE', presc_raw$GENERIC_NAME), 'CODEINE PHOSPHATE',
if_else(grepl('OPIUM/BELLADONNA', presc_raw$GENERIC_NAME), 'OPIUM/BELLADONNA',
if_else(grepl('FENTANYL', presc_raw$GENERIC_NAME), 'FENTANYL',
if_else(grepl('HYDROMORPHONE', presc_raw$GENERIC_NAME), 'HYDROMORPHONE',
if_else(grepl('MEPERIDINE', presc_raw$GENERIC_NAME), 'MEPERIDINE', GENERIC_NAME
)))))))))))))
presc_raw <- presc_raw %>%
mutate(dosage_form_clean =
if_else(grepl('TABLET', presc_raw$DOSAGE_FORM_DESC), 'PILL',
if_else(grepl('VIAL', presc_raw$DOSAGE_FORM_DESC), 'VIAL',
if_else(grepl('SYRINGE', presc_raw$DOSAGE_FORM_DESC), 'VIAL',
if_else(grepl('CAPSULE', presc_raw$DOSAGE_FORM_DESC), 'PILL',
if_else(grepl('PATCH', presc_raw$DOSAGE_FORM_DESC), 'PATCH',
if_else(grepl('LOZENGE', presc_raw$DOSAGE_FORM_DESC), 'LOZENGE',
if_else(grepl('AMPUL', presc_raw$DOSAGE_FORM_DESC), 'AMPUL',
if_else(grepl('SPRAY', presc_raw$DOSAGE_FORM_DESC), 'SPRAY',
if_else(grepl('SOLUTION', presc_raw$DOSAGE_FORM_DESC), 'LIQUID',
if_else(grepl('LIQUID', presc_raw$DOSAGE_FORM_DESC), 'LIQUID',
if_else(grepl('CONCENTRATE', presc_raw$DOSAGE_FORM_DESC), 'LIQUID',
if_else(grepl('SUPPOSITORY', presc_raw$DOSAGE_FORM_DESC), 'SUPPOSITORY', 'NA'
)))))))))))))
table(presc_raw$dosage_form_clean)
unique(presc_raw$dosage_form_clean)
presc <- presc %>%
mutate(generic_name =
if_else(grepl('DIHYDROCODEINE BITARTR', presc_raw$GENERIC_NAME), 'DIHYDROCODEINE BITARTRATE',
if_else(grepl('BUPRENORPHINE', presc_raw$GENERIC_NAME), 'BUPRENORPHINE',
if_else(grepl('HYDROCODONE BITARTRAT', presc_raw$GENERIC_NAME), 'HYDROCODONE BITARTRATE',
if_else(grepl('MORPHINE SULFATE', presc_raw$GENERIC_NAME), 'MORPHINE SULFATE',
if_else(grepl('OXYCODONE', presc_raw$GENERIC_NAME), 'OXYCODONE',
if_else(grepl('PENTAZOCINE', presc_raw$GENERIC_NAME), 'PENTAZOCINE',
if_else(grepl('TRAMADOL', presc_raw$GENERIC_NAME), 'TRAMADOL',
if_else(grepl('CODEINE PHOSPHATE', presc_raw$GENERIC_NAME), 'CODEINE PHOSPHATE',
if_else(grepl('OPIUM/BELLADONNA', presc_raw$GENERIC_NAME), 'OPIUM/BELLADONNA',
if_else(grepl('FENTANYL', presc_raw$GENERIC_NAME), 'FENTANYL',
if_else(grepl('HYDROMORPHONE', presc_raw$GENERIC_NAME), 'HYDROMORPHONE',
if_else(grepl('MEPERIDINE', presc_raw$GENERIC_NAME), 'MEPERIDINE', GENERIC_NAME
)))))))))))))
presc <- presc %>%
mutate(dosage_form =
if_else(grepl('TABLET', presc_raw$DOSAGE_FORM_DESC), 'PILL',
if_else(grepl('VIAL', presc_raw$DOSAGE_FORM_DESC), 'VIAL',
if_else(grepl('SYRINGE', presc_raw$DOSAGE_FORM_DESC), 'VIAL',
if_else(grepl('CAPSULE', presc_raw$DOSAGE_FORM_DESC), 'PILL',
if_else(grepl('PATCH', presc_raw$DOSAGE_FORM_DESC), 'PATCH',
if_else(grepl('LOZENGE', presc_raw$DOSAGE_FORM_DESC), 'LOZENGE',
if_else(grepl('AMPUL', presc_raw$DOSAGE_FORM_DESC), 'AMPUL',
if_else(grepl('SPRAY', presc_raw$DOSAGE_FORM_DESC), 'SPRAY',
if_else(grepl('SOLUTION', presc_raw$DOSAGE_FORM_DESC), 'LIQUID',
if_else(grepl('LIQUID', presc_raw$DOSAGE_FORM_DESC), 'LIQUID',
if_else(grepl('CONCENTRATE', presc_raw$DOSAGE_FORM_DESC), 'LIQUID',
if_else(grepl('SUPPOSITORY', presc_raw$DOSAGE_FORM_DESC), 'SUPPOSITORY', 'NA'
)))))))))))))
presc %>% group_by(generic_name) %>% summarise(count = n())
presc %>% group_by(generic_name) %>% summarise(count = n()) %>% arrange()
presc %>% group_by(generic_name) %>% summarise(count = n()) %>% arrange(count)
presc %>% group_by(PERSON_ID) %>% summarise(num_presc = n())
mode_fun <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
presc %>% filter(PERSON_ID==1)
presc %>% filter(PERSON_ID==2)
View(presc)
presc %>% filter(PERSON_ID==3)
test = presc %>% filter(PERSON_ID==3)
test$generic_name=="Oxycodone"
grepl('Oxycodone', test$generic_name)
test
grepl('OXYCODONE', test$generic_name)
sum(grepl('OXYCODONE', test$generic_name))
presc %>% group_by(PERSON_ID) %>% summarise(num_presc = n(),
most_presc_drug = mode_fun(generic_name),
oxy_count = sum(grepl('OXYCODONE', test$generic_name)),
tram_count = sum(grepl('TRAMADOL', test$generic_name)),
hydrobit_count = sum(grepl('HYDROCODE BITARTRATE', test$generic_name)))
#presc %>% group_by(generic_name) %>% summarise(count = n()) %>% arrange(count)
presc %>% group_by(PERSON_ID) %>% summarise(num_presc = n(),
most_presc_drug = mode_fun(generic_name),
oxy_count = sum(grepl('OXYCODONE', test$generic_name)),
tram_count = sum(grepl('TRAMADOL', test$generic_name)),
hydrobit_count = sum(grepl('HYDROCODONEE BITARTRATE')))
#presc %>% group_by(generic_name) %>% summarise(count = n()) %>% arrange(count)
presc %>% group_by(PERSON_ID) %>% summarise(num_presc = n(),
most_presc_drug = mode_fun(generic_name),
oxy_count = sum(grepl('OXYCODONE', generic_name)),
tram_count = sum(grepl('TRAMADOL', generic_name)),
hydrobit_count = sum(grepl('HYDROCODONEE BITARTRATE', generic_name)))
#presc %>% group_by(generic_name) %>% summarise(count = n()) %>% arrange(count)
presc %>% group_by(PERSON_ID) %>% summarise(num_presc = n(),
most_presc_drug = mode_fun(generic_name),
oxy_count = sum(grepl('OXYCODONE', generic_name)),
tram_count = sum(grepl('TRAMADOL', generic_name)),
hydrobit_count = sum(grepl('HYDROCODONE BITARTRATE', generic_name)))
#presc %>% group_by(generic_name) %>% summarise(count = n()) %>% arrange(count)
presc_summary = presc %>% group_by(PERSON_ID) %>% summarise(num_presc = n(),
most_presc_drug = mode_fun(generic_name),
oxy_count = sum(grepl('OXYCODONE', generic_name)),
tram_count = sum(grepl('TRAMADOL', generic_name)),
hydrobit_count = sum(grepl('HYDROCODONE BITARTRATE', generic_name)))
table(presc_summary$most_presc_drug)
table(presc$dosage_form)
#presc %>% group_by(generic_name) %>% summarise(count = n()) %>% arrange(count)
presc_summary = presc %>% group_by(PERSON_ID) %>% summarise(num_presc = n(),
most_presc_drug = mode_fun(generic_name),
oxy_count = sum(grepl('OXYCODONE', generic_name)),
tram_count = sum(grepl('TRAMADOL', generic_name)),
hydrobit_count = sum(grepl('HYDROCODONE BITARTRATE', generic_name)),
most_dose_form = mode_fun(dosage_form),
pill_count = sum(grepl('PILL', dosage_form)),
patch_count = sum(grepl('PATCH', dosage_form)),
liquid_count = sum(grepl('LIQUID', dosage_form)))
presc_summary
table(presc_summary$most_dose_form)
